Index: apps/vue-storefront-api/src/lib/util.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apps/vue-storefront-api/src/lib/util.js	(date 1585059508890)
+++ apps/vue-storefront-api/src/lib/util.js	(date 1585059508890)
@@ -78,15 +78,22 @@
   return result;
 }
 
-/**  Creates a api error status Express Response object.
- *  @param {express.Response} res  Express HTTP Response
- *  @param {number} [code=200]    Status code to send on success
- *  @param {json} [result='OK']    Text message or result information object
+/**
+ *  Creates an error for API status of Express Response object.
+ *
+ *  @param {express.Response} res   Express HTTP Response
+ *  @param {object|string} error    Error object or error message
+ *  @return {json} [result='OK']    Text message or result information object
  */
-export function apiError (res, errorObj) {
-  const errorCode = errorObj.code || errorObj.status || 500
-  const errorMessage = errorObj.errorMessage || errorObj
-  return apiStatus(res, errorMessage, errorCode)
+export function apiError (res, error) {
+  let errorCode = error.code || error.status || 500;
+  let errorMessage = error.errorMessage || error;
+  if (error instanceof Error) {
+    // Class 'Error' is not serializable with JSON.stringify, extract data explicitly.
+    errorCode = error.code || errorCode;
+    errorMessage = error.message;
+  }
+  return apiStatus(res, errorMessage, errorCode);
 }
 
 export function encryptToken (textToken, secret) {
