Index: apps/vue-storefront/src/themes/default/pages/Product.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- apps/vue-storefront/src/themes/default/pages/Product.vue	(date 1585212045106)
+++ apps/vue-storefront/src/themes/default/pages/Product.vue	(date 1585212045106)
@@ -272,13 +272,30 @@
   computed: {
     ...mapGetters({
       getCurrentCategory: 'category-next/getCurrentCategory',
-      getCurrentProduct: 'product/getCurrentProduct',
+      // getCurrentProduct: 'product/getCurrentProduct',
       getProductGallery: 'product/getProductGallery',
       getCurrentProductConfiguration: 'product/getCurrentProductConfiguration',
       getOriginalProduct: 'product/getOriginalProduct',
       attributesByCode: 'attribute/attributeListByCode',
       getCurrentCustomOptions: 'product/getCurrentCustomOptions'
     }),
+    getCurrentProduct() {
+      /* wrap getter to replace prices with group prices*/
+      const user = this.$store.state.user.current;
+      const group_id = user.group_id;
+      const product = this.$store.getters['product/getCurrentProduct'];
+      if (Array.isArray(product.group_prices)) {
+        product.group_prices.forEach((one) => {
+          if (one.group_id == group_id) {
+            product.price = one.price;
+            product.price_incl_tax = one.price;
+            product.special_price = one.price;
+            product.special_price_incl_tax = one.price;
+          }
+        })
+      }
+      return product;
+    },
     getOptionLabel () {
       return (option) => {
         const configName = option.attribute_code ? option.attribute_code : option.label.toLowerCase()
